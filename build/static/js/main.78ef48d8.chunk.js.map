{"version":3,"sources":["firebase.js","Routes/PrivateRoute.js","Routes/PublicRoute.js","Components/Loader/Loading.js","Screens/Auth/Authsidebar.jsx","Screens/Auth/Signin.jsx","Screens/Auth/Signup.jsx","Context/userContext.js","Screens/Worker/WorkerDashboard.jsx","Routes/Routes.js","App.js","index.js"],"names":["app","firebase","apps","length","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","db","database","PrivateRoute","isAuthenticated","Component","component","restProps","props","to","PublicRoute","Loading","width","hegiht","style","position","top","left","transform","type","color","height","Authsidebar","headline","btnName","path","id","className","Signin","useState","loading","setLoading","error","setError","validationSchema","Yup","email","required","password","onSubmit","a","signInWithEmailAndPassword","formik","values","then","catch","err","message","useFormik","initialValues","handleSubmit","placeholder","name","getFieldProps","touched","errors","disabled","Signup","createUserWithEmailAndPassword","ref","users","child","currentUser","uid","set","alert","signOut","createContext","WorkerDashboard","useContext","userContext","userData","setUserData","console","log","onClick","Routes","exact","App","setIsAuthenticated","useEffect","onAuthStateChanged","user","on","snapshot","val","Provider","value","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.78ef48d8.chunk.js","sourcesContent":["import firebase from 'firebase';\r\n\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyCaCxOS1Rdgy3oWFYk3Yp1mw1jwN-zZc2c\",\r\n  authDomain: \"earnings-tracking-9fe48.firebaseapp.com\",\r\n  projectId: \"earnings-tracking-9fe48\",\r\n  storageBucket: \"earnings-tracking-9fe48.appspot.com\",\r\n  messagingSenderId: \"696240016173\",\r\n  appId: \"1:696240016173:web:5b30198f0f1bf9725961a4\"\r\n};\r\n\r\nlet app;\r\nif (firebase.apps.length === 0) {\r\n  app = firebase.initializeApp(firebaseConfig);\r\n} else {\r\n  app = firebase.app();\r\n}\r\n\r\n//for initialize auth\r\nconst auth = firebase.auth();\r\nconst db = app.database();\r\nexport {auth, db};","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nconst PrivateRoute = ({ isAuthenticated, component: Component, ...restProps }) => {\r\n    return (\r\n        <Route\r\n            {...restProps}\r\n            component={(props) =>\r\n                isAuthenticated \r\n                ? <Component {...props} /> \r\n                : <Redirect to=\"/Signin\" /> \r\n            }\r\n        />\r\n    )\r\n}\r\n\r\nexport default PrivateRoute;\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nconst PublicRoute = ({ isAuthenticated, component: Component, ...restProps}) => {\r\n    return (\r\n        <Route\r\n            {...restProps}\r\n            component={(props) =>\r\n                isAuthenticated\r\n                ? <Redirect to=\"/WorkerDashboard\" /> \r\n                : <Component {...props} />\r\n            }\r\n        />\r\n    )\r\n}\r\n\r\nexport default PublicRoute;\r\n","import React from 'react';\r\nimport Loader from \"react-loader-spinner\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\n\r\nconst Loading = ({ width, hegiht }) => {\r\n    const centerPosition = {\r\n        position: \"absolute\",\r\n        top: \"50%\",\r\n        left: \"50%\",\r\n        transform: \"translate(-50%, -50%)\"\r\n    };\r\n    return (\r\n        <div style={centerPosition}>\r\n            <Loader\r\n                type=\"Oval\"\r\n                color=\"#6a5acd\"\r\n                height={hegiht}\r\n                width={width}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loading\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// style\r\nimport \"./style.css\";\r\n\r\nconst Authsidebar = ({ headline, btnName, path }) => {\r\n  return (\r\n    <>\r\n      <div id=\"shape1\"></div>\r\n      <div id=\"shape2\"></div>\r\n      <div id=\"shape3\"></div>\r\n      <div id=\"shape4\"></div>\r\n      <div className=\"logo\">\r\n        Logo\r\n      </div>\r\n      <div id=\"auth__sidebar__inner\">\r\n        <h2 className=\"medium__text\"><strong>{headline}</strong></h2>\r\n        <h6 className=\"small__text\">To keep track of your earnings keep connected.</h6>\r\n        <Link to={path}>\r\n          <button>{btnName}</button>\r\n        </Link>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Authsidebar;","import React, { useState, useContext } from 'react';\r\nimport './style.css';\r\n\r\n// components\r\nimport Authsidebar from './Authsidebar';\r\n\r\n// firebase\r\nimport { auth } from '../../firebase';\r\n\r\n// error handling\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nconst Signin = () => {\r\n  const [ loading, setLoading ] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const initialValues = {\r\n    email: '',\r\n    password: ''\r\n  }\r\n\r\n  const validationSchema = Yup.object({\r\n    email: Yup.string().email('Invalid email format').required('Email is required'),\r\n    password: Yup.string().required('Password is required')\r\n  })\r\n  \r\n  const onSubmit = async () => {\r\n    setError('');\r\n    setLoading(true);\r\n    await auth\r\n    .signInWithEmailAndPassword(formik.values.email, formik.values.password)\r\n    .then(() => {\r\n      // console.log('Logged in');\r\n      setLoading(false);\r\n    }).catch((err) => {\r\n      setError(err.message);\r\n      setLoading(false);\r\n    });\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues,\r\n    onSubmit,\r\n    validationSchema,\r\n  });\r\n\r\n  return (\r\n      <div className=\"auth__box\">\r\n        <div id=\"box__left\">\r\n          <Authsidebar\r\n            headline=\"Don't Have Account\"\r\n            btnName=\"Sign Up\"\r\n            path=\"/Signup\"\r\n          />\r\n        </div>\r\n        <div id=\"box__right\">\r\n          <h2>Login</h2>\r\n          <div id=\"error\">{error && error}</div>\r\n          <form onSubmit={formik.handleSubmit}>\r\n            <div>\r\n                <input type=\"email\" placeholder=\"Email\" id=\"email\" name=\"email\" {...formik.getFieldProps('email')} />\r\n                {formik.touched.email && formik.errors.email \r\n                ? <div id=\"error\">{formik.errors.email}</div> : null}\r\n            </div>\r\n            <div>\r\n              <input type=\"password\" placeholder=\"Password\" id=\"password\" name=\"password\" {...formik.getFieldProps('password')} />\r\n              {formik.touched.password && formik.errors.password \r\n              ? <div id=\"error\">{formik.errors.password}</div> : null}\r\n            </div>\r\n            <div id=\"auth_btn\">\r\n              <button id=\"signin\" type=\"submit\" disabled={loading}>{loading ? \"Loading...\" : \"Signup\"}</button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default Signin\r\n","import React, { useState, useContext } from 'react';\r\nimport './style.css';\r\n\r\n// firebase\r\nimport { auth, db } from '../../firebase';\r\n\r\n// components\r\nimport Authsidebar from './Authsidebar';\r\n\r\n// error handling\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nconst Signup = () => {\r\n  const [ loading, setLoading ] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const initialValues = {\r\n    name: '',\r\n    email: '',\r\n    password: ''\r\n  }\r\n\r\n  const validationSchema = Yup.object({\r\n    name: Yup.string().required('Name is required'),\r\n    email: Yup.string().email('Invalid email format').required('Email is required'),\r\n    password: Yup.string().required('Password is required')\r\n  })\r\n  \r\n  const onSubmit = async () => {\r\n    setError('');\r\n    setLoading(true);\r\n    await auth\r\n    .createUserWithEmailAndPassword(formik.values.email, formik.values.password)\r\n    .then(async() => {\r\n      const ref = db.ref();\r\n      const users = ref.child(`Users/${auth.currentUser.uid}`);\r\n      await users.set({ \r\n        email: formik.values.email, \r\n        name: formik.values.name\r\n      })\r\n      .then(() =>{\r\n        alert('Account created successfully');\r\n      })\r\n      .catch((err) => {\r\n        auth.signOut();\r\n        setError(err.message);\r\n      })\r\n      setLoading(false);\r\n    })\r\n    .catch((err) => {\r\n      setError(err.message);\r\n      setLoading(false);\r\n    });\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues,\r\n    onSubmit,\r\n    validationSchema,\r\n  });\r\n\r\n  return (\r\n    <div className=\"auth__box\">\r\n        <div id=\"box__left\">\r\n          <Authsidebar headline=\"Welcome Back\" btnName=\"Login\" path=\"/Signin\" />\r\n        </div>\r\n        <div id=\"box__right\">\r\n          <h2>Create Account</h2>\r\n          <div id=\"error\">{error && error}</div>\r\n          <form onSubmit={formik.handleSubmit}>\r\n            <div>\r\n              <input type=\"text\" placeholder=\"Name\" id=\"name\" name=\"name\" {...formik.getFieldProps('name')} />\r\n              {formik.touched.name && formik.errors.name \r\n              ? <div id=\"error\">{formik.errors.name}</div> : null}\r\n            </div>\r\n            \r\n            <div>\r\n              <input type=\"email\" placeholder=\"Email\" id=\"email\" name=\"email\" {...formik.getFieldProps('email')} />\r\n              {formik.touched.email && formik.errors.email \r\n              ? <div id=\"error\">{formik.errors.email}</div> : null}\r\n            </div>\r\n            \r\n            <div>\r\n              <input type=\"password\" placeholder=\"Password\" id=\"password\" name=\"password\" {...formik.getFieldProps('password')} />\r\n              {formik.touched.password && formik.errors.password \r\n              ? <div id=\"error\">{formik.errors.password}</div> : null}\r\n            </div>\r\n            \r\n            <div id=\"auth_btn\">\r\n              <button id=\"signin\" type=\"submit\" disabled={loading}>{loading ? \"Loading...\" : \"Signup\"}</button>\r\n            </div>\r\n          </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Signup\r\n","import { createContext } from 'react';\r\n\r\nexport default createContext(null);","import React, { useContext } from 'react';\r\nimport { auth } from '../../firebase';\r\n\r\n// context\r\nimport userContext from '../../Context/userContext';\r\n\r\nconst WorkerDashboard = () => {\r\n    const { userData, setUserData } = useContext(userContext);\r\n\r\n    console.log(userData)\r\n\r\n    const handleSignout= () => {\r\n        auth.signOut();\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {userData && userData.name}\r\n            <button onClick={handleSignout}>Logout</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WorkerDashboard\r\n\r\n","import React, { useContext } from \"react\";\r\n\r\n// Routes\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport PrivateRoute from \"./PrivateRoute\";\r\nimport PublicRoute from \"./PublicRoute\";\r\n\r\n// All Pages\r\nimport Loading from '../Components/Loader/Loading';\r\nimport Signin from '../Screens/Auth/Signin';\r\nimport Signup from '../Screens/Auth/Signup';\r\nimport WorkerDashboard from '../Screens/Worker/WorkerDashboard';\r\n\r\n\r\nconst Routes = ({ isAuthenticated, loading }) => {\r\n  return (\r\n    loading ? <Loading width={50} hegiht={50} /> :\r\n    <Router>\r\n      <Switch>\r\n        <PublicRoute path=\"/\" component={Signin} exact={true} isAuthenticated={isAuthenticated} />\r\n        <PublicRoute path=\"/Signin\" component={Signin} exact={true} isAuthenticated={isAuthenticated} />\r\n        <PublicRoute path=\"/Signup\" component={Signup} exact={true} isAuthenticated={isAuthenticated} />\r\n        <PrivateRoute path=\"/WorkerDashboard\" component={WorkerDashboard} exact={true} isAuthenticated={isAuthenticated} />     \r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default Routes;","import React, { useState, useEffect } from 'react';\nimport { auth, db } from './firebase';\nimport Routes from './Routes/Routes';\n\n// context\nimport UserContext from './Context/userContext';\n\nfunction App() {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [userData, setUserData] = useState({});\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n    auth.onAuthStateChanged((user) => {\n      if(user) {\n        setIsAuthenticated(true);\n        const userRef = db.ref(`Users/${user.uid}`);\n        userRef.on('value', (snapshot) => {\n          setUserData(snapshot.val());\n          setLoading(false);\n        });\n      }\n      else {\n        setIsAuthenticated(false);\n        setLoading(false);\n      }\n    })\n  }, []);\n\n  return (\n    <UserContext.Provider value={{ userData, setUserData }}>\n        <Routes isAuthenticated={isAuthenticated} loading={loading} />\n    </UserContext.Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}